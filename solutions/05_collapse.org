
** @solomon

#+begin_src haskell

xs :: [(Int, Int)]
xs = [(1,3),(5,8),(2,5)]

g :: [(Int, Int)] -> (Int, Int) -> [(Int, Int)]
g a@((a1, a2):as) b@(b1, b2) =
    if (a2 - 1) >= b1
    then as ++ [(a1,b2)]
    else a ++ [b]

h :: [(Int, Int)] -> [(Int, Int)]
h [] = []
h xs = foldl g [head ys] (tail ys)
    where ys = sort xs

#+end_src
